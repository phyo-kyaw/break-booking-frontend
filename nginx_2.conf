server {
    listen 80;
    server_name break-booking.online www.break-booking.online;
    return 301 https://$server_name$request_uri;
}

# Main server block for www https

server {

    listen 443 ssl;
    server_name break-booking.online www.break-booking.online;

    #SSL configuration

		ssl_certificate     /etc/nginx/ssl/break-booking_online.chained.crt;
		ssl_certificate_key  /etc/nginx/ssl/break-booking_online.key;


    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1.3 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;

    # listen 80;
    # server_name localhost;

    location /api {

      rewrite ^/api(.*) $1 break;

      # Set the proxy headers
      autoindex off;
      default_type application/json;

      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-NginX-Proxy true;
      proxy_set_header        X-Forwarded-Proto $scheme;

      # Configure which address the request is proxied to

      proxy_pass          http://172.19.0.3:8080;
      proxy_read_timeout  90;
      #proxy_redirect      http://172.19.0.3:8080 https://$server_name/api;

      # Set the security headers

      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

      add_header Permissions-Policy "interest-cohort=()"; # Don't allow Google FLoC
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"; #HSTS
      add_header X-Frame-Options DENY; #Prevents clickjacking
      add_header X-Content-Type-Options nosniff; #Prevents mime sniffing
      add_header X-XSS-Protection "1; mode=block"; #Prevents cross-site scripting attacks
      add_header Referrer-Policy "origin"; #Idk what this actually does

      # Rewrite all URI's so they have a trailing slash



      #rewrite ^([^.]*[^/])$ $1/ permanent;
    }

	  location / {

			root /usr/share/nginx/html;
			index index.html index.htm;
			try_files $uri $uri/ /index.html =404;

    }
  }
